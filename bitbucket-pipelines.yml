image: atlassian/pipelines-awscli

pipelines:
  default:
    - step:
        name: build artifact
        caches:
          - docker
        services:
          - docker
        script:
          - docker build -t ok-magento-1 .
  branches:
    master:
      - step:
          name: build & push docker image
          caches:
            - docker
          services:
            - docker
          script:
            - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_LAMBDA_USER
            - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_LAMBDA_USER
            - echo "Building docker image"
            - docker build -t ok-magento-1 .
            - echo "Tag docker image"
            - docker tag ok-magento-1:latest repository.okit.io:5001/ok-magento-1:$BITBUCKET_BUILD_NUMBER
            - echo "Login to Nexus"
            - docker login repository.okit.io:5001 -u $NEXUS_TEST_USERNAME -p $NEXUS_TEST_PASSWORD
            - echo "Push docker image"
            - docker push repository.okit.io:5001/ok-magento-1:$BITBUCKET_BUILD_NUMBER
      - step:
          name: Update image version in deployment
          script:
            - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_MAGENTO_EKS_DEPLOYMENT_USER
            - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_MAGENTO_EKS_DEPLOYMENT_USER
            - echo "Setup kubectl"
            - apk add --no-cache curl
            - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            - chmod +x ./kubectl
            - aws --region eu-west-1 eks update-kubeconfig --name eks-dev
            - echo "Updating version image"
            - ./kubectl -n magento-demo set image deployment.v1.apps/magento-demo-1 magento-demo-1=repository.okit.io:5001/ok-magento-1:$BITBUCKET_BUILD_NUMBER
